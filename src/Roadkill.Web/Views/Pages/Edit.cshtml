@using System.Globalization
@model PageViewModel
@{
    ViewBag.Title = "Edit project";

    bool? IsNew = (bool?)ViewBag.IsNew;
    if (IsNew.HasValue && IsNew.Value)
    {
        ViewBag.Title = "Add new project";
    }

    //ViewBag.Title = SiteStrings.EditPage_Title;
}

<section id="global__content">



    <div class="row">
        <div id="global__body_content" class="col-md-6 columns body_content">
            <script src="~/Assets/Scripts/roadkill/editpage/bootstrap-datepicker.js"></script>
            <script>
                jQuery(function ($) {
                    var pageTags = [ @(Html.Raw(Model.JavascriptArrayForAllTags()))];
                    var editPage = new Roadkill.Web.EditPage(pageTags);

                    $('.datepicker').datepicker({
                        format: 'dd/mm/yyyy',
                        startDate: '+1d'
                    });

                    $('.datepicker').on('change', function () {
                        $('.datepicker').hide();
                    });
                });
            </script>

            <h1>@ViewBag.Title</h1>

            @Html.BootstrapValidationSummary(SiteStrings.EditPage_Error)

            <form class="form-horizontal" role="form" method="post" id="editpage-form">
                @Html.BootstrapValidationSummary("Validation Issues")

                <div id="editpage-button-container" class="form-group">
                    <div class="col-sm-12">
                        <button type="button" class="button saveButton" tabindex="50" onclick="$('#btnsave').click();">@SiteStrings.Button_Save</button>
                        @if (Model.Id > 0)
                        {
                            @Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki", new { id = Model.Id, title = Model.EncodedTitle }, new { @class = "btn btn-link" })
                        }
                        else
                        {
                            @Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki", null, new { @class = "btn btn-link" })
                        }
                    </div>
                </div>


                @(Html.HiddenFor<PageViewModel, int>(p => p.Id))
                @(Html.HiddenFor<PageViewModel, string>(p => p.PreviousTitle))
                @(Html.HiddenFor<PageViewModel, string>(p => p.RawTags))

                <div class="form-group">
                    <div class="col-sm-12">
                        <label for="title">Title</label>
                        @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.Title, "Title", false))
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="ProjectStart">Phase Start</label>
                        @(Html.BootstrapDatePicker<PageViewModel, DateTime>(p => p.ProjectStart, SiteStrings.EditPage_Title_Label, false))
                    </div>
                    <div class="col-sm-6">
                        <label for="ProjectEnd">Phase End</label>
                        @(Html.BootstrapDatePicker<PageViewModel, DateTime>(p => p.ProjectEnd, SiteStrings.EditPage_Title_Label, false))
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="ProjectStatus">Project Status</label>
                        @Html.BootstrapDropDownListFor(p => p.ProjectStatus, Model.ProjectStatusTypesAsSelectList, SiteStrings.SiteSettings_Configuration_DatabaseType_Help)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <label for="orgID">Organisation</label>
                        @Html.BootstrapDropDownListFor(p => p.orgID, Model.OrgsAsNewSelectList, SiteStrings.SiteSettings_Configuration_DatabaseType_Help)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="Department">Department</label>
                        @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.Department, "Department", false))

                    </div>
                    <div class="col-sm-6">
                        <label for="Owner">Key Contact</label>
                        @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.Owner, "Owner", false))
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="fundingBoundary">Budget</label>
                        @Html.BootstrapDropDownListFor(p => p.FundingBoundary, Model.FundingBoundariesAsNewSelectList, SiteStrings.SiteSettings_Configuration_DatabaseType_Help)
                    </div>

                    <div class="col-sm-6">
                        <label for="OwnerEmail">Key Contact Email</label>
                        @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.OwnerEmail, "OwnerEmail", false))
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="CollaborationLevel">Allow Collaboration</label>
                        @Html.BootstrapDropDownListFor(p => p.CollaborationLevel, Model.CollaborationLevelAsNewSelectList, SiteStrings.SiteSettings_Configuration_DatabaseType_Help)


                    </div>
                </div>
                @if (Model.VersionNumber != 0)
                {

                    <!-- Modal -->
                    <div class="modal fade" id="updateSuccessModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Status update posted</h4>
                                </div>
                                <div class="modal-body">
                                    <p>Status update has been posted.</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <div id="status-update-editor" class="col-sm-12">
                            <h4>Status Updates</h4>
                            <textarea id="UpdateStatusTxt" type="text" class="form-control" autocomplete="off" placeholder="Enter an update"></textarea>


                        </div><div class="col-sm-12">
                            <button id="UpdateStatusBtn" type="button" class="btn btn-primary pull-right">Update Status</button>
                        </div>
                        <div id="statuses">
                            @foreach (var statusUpdate in Model.StatusUpdates)
                            {
                                <div class="col-lg-12" id="statuscontents-@statusUpdate.Id">
                                    <h4>@statusUpdate.UpdateDate.ToLongDateString() @statusUpdate.UpdateDate.ToString("hh:mm", CultureInfo.InvariantCulture)</h4>
                                    <ul class="list-group">
                                        <li class="list-group-item">
                                            <div>
                                                <span class="relationship-icon glyphicon glyphicon-bell"></span> @statusUpdate.Author
                                            </div>
                                            <textarea id="EditUpdateStatusTxt" class="form-control" cols="20" name="Content" rows="2">@statusUpdate.Text</textarea>
                                        </li>
                                    </ul>

                                    <div class="row">
                                        <div class="col-lg-8">
                                            <button id="statusedit-@statusUpdate.Id" type="button" class="btn-success edit-status-button btn pull-right">Edit Status Update</button>
                                        </div>
                                        <div class="col-lg-4">
                                            <button id="statusdelete-@statusUpdate.Id" type="button" class="btn-danger delete-status-button btn pull-right">Delete Status Update</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }

                @if (RoadkillContext.IsAdmin)
                {
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="checkbox">
                                <label>
                                    @(Html.BootstrapCheckBoxFor<PageViewModel>(p => p.IsLocked, SiteStrings.EditPage_AdminOnly))
                                    @SiteStrings.EditPage_AdminOnly
                                </label>
                            </div>
                        </div>
                    </div>
                }

                <label for="Content">Description</label>
                <textarea class="form-control" cols="20" id="Content" name="Content" rows="2">@Model.ContentAsHtml</textarea>


                <div id="editpage-button-container" class="form-group">
                    <div class="col-sm-12">
                        <button id="btnsave" type="submit" class="button saveButton btn btn-primary" tabindex="6">@SiteStrings.Button_Save</button>
                        @if (Model.Id > 0)
                        {
                            @Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki", new { id = Model.Id, title = Model.EncodedTitle }, new { @class = "btn btn-link" })
                        }
                        else
                        {
                            @Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki", null, new { @class = "btn btn-link" })
                        }
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-sm-12">
                        <label for="ProjectStart">Tags</label>
                        <div class="checkbox">
                            @(Html.TextBox("TagsEntry", null, new { @class = "form-control tm-input", autocomplete = "off", placeholder = SiteStrings.EditPage_Tags_Label }))
                        </div>
                    </div>
                </div>
                @Html.DialogPartial("ChooseImage")
                @Html.DialogPartial("MarkupHelp")

            </form>
        </div>

        <div class="col-md-12">

            <h2>Project Admin</h2>


            @if (Model.Relationships != null && Model.Relationships.Any(x => x.relTypeId == 3 || x.relTypeId == 4))
            {<p>The following users are watching contributing to this project</p>

                <table class="table">
                    <tr>
                        <td>Watching/Contributing</td>
                        <td>User</td>
                        <td>Organisation</td>
                        <td></td>
                    </tr>
                    @foreach (var rel in Model.Relationships.Where(x => x.relTypeId == 3 || x.relTypeId == 4))
                    {
                        <tr>
                            <td>
                                @if (rel.relTypeId == 3)
                                {
                                    <span class="glyphicon glyphicon-eye-open"></span>

                                }
                                else if (rel.relTypeId == 4)
                                {
                                    <span class="glyphicon glyphicon-heart"></span>

                                }
                            </td>
                            <td>@rel.username</td>
                            <td>
                                @if (rel.orgID != 0)
                                {
                                    @Model.OrgsAsNewSelectList.FirstOrDefault(x => x.Value == rel.orgID.ToString()).Text;
                                }
                            </td>

                            <td>
                                @if (rel.relTypeId == 3)
                                {
                                    <span class="badge">Watching</span>
                                }
                                else if (rel.relTypeId == 4)
                                {
                                    if (rel.pending == true && rel.approved == false)
                                    {
                                        <span id="badge-@rel.id" class="badge">Pending</span>
                                        <button id="approve-@rel.id" type="button" class="approve-as-contributer btn btn-primary btn-xs">Approve</button>
                                        <button id="reject-@rel.id" type="button" class="reject-as-contributer btn btn-default btn-xs">Reject</button>
                                    }
                                    if (rel.pending == false && rel.approved == false)
                                    {
                                        <span id="@rel.username-badge" class="badge">Rejected</span>
                                    }
                                    else if (rel.approved == true)
                                    {
                                        <span class="badge">Contributing</span>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <div class="alert alert-warning">
                    There are no watchers or contributors on this project at the moment.
                </div>

            }
        </div>
    </div>
    <script type="text/javascript">
        $().ready(function () {
            $('#UpdateStatusTxt').summernote({
                height: 100
            });
            $('#Content').summernote({
                height: 300
            });

            $('#EditUpdateStatusTxt').summernote({
                height: 300
            });

            $(window).keydown(function (event) {
                if (event.keyCode == 13) {
                    if (event.target.localName != "textarea") {
                            event.preventDefault();
                        return false;
                    }
                }
            });


            $("#btnsave").click(function() {
                $("#editpage-form").submit();
            });
            $("#Owner").attr("required","true");
            $("#OwnerEmail").attr("required", "true");
            $("#editpage-form").validate({
                rules: {
                    Owner:{ required: true },
                    OwnerEmail:{ required: true }
                },
                messages: {
                    Owner: "Please enter a key contact",
                    OwnerEmail: "Please enter your key contact email"
                }
            });

            $('#ProjectStart').val($('#ProjectStart').val().replace('00:00:00', ''));
            $('#ProjectEnd').val($('#ProjectEnd').val().replace('00:00:00', ''));

    $(".approve-as-contributer").click(function () {
        var relid = $(this).attr('id').split("-")[1];
        $.ajax('/api/user-status/approve-contribute/@Model.Id/' + relid +"/",
        {
            type: 'POST',
            success: function (data) {
                $("#badge-" + relid).html("Approved");
                $("#reject-" + relid).hide();
                $("#approve-" + relid).hide();
            }
        });
    });

    $(".reject-as-contributer").click(function () {
        var relid = $(this).attr('id').split("-")[1];
        $.ajax('/api/user-status/approve-contribute/@Model.Id/' + relid,{
            type: 'POST',
            success: function (data) {
                $("#badge-" + relid).html("Rejected");
                $("#reject-" + relid).hide();
                $("#approve-" + relid).hide();
            }
        });
    });

    $("#UpdateStatusBtn").click(function () {

        var obj = { Text: $('#UpdateStatusTxt').val(), PageId:@Model.Id}

        $.ajax('/api/project-status/update/',{
            data: JSON.stringify(obj),
            contentType: 'application/json',
            type: 'POST',
            success: function (data) {
                $("#statuses").prepend("<div class='col-lg-12'><h4>Just now</h4><ul class='list-group'><li class='list-group-item'><div> <span class='relationship-icon glyphicon glyphicon-bell'></span>" + data.Author + " </div><div>" + data.Text +"</div></li></ul></div>");
                $('#updateStatusTxt').val('');

                $('#status-update-editor .note-editable').empty();
                $("#updateSuccessModal").modal();

            }
        });
    });


      
    $(".delete-status-button").click(function () {
        var id=   $(this).attr("id").split("-")[1];
        $.ajax('/api/project-status/delete/' + id, {
        type:'DELETE',
            success: function (data) {
                $("#statuscontents-" + data).fadeOut();
            }
        });
    });

    $(".edit-status-button").click(function () {
        var obj = { Text: $('#EditUpdateStatusTxt').val(), PageId:@Model.Id }
        var id = $(this).attr("id").split("-")[1];
        $.ajax('/api/project-status/edit/' + id, {
            data: JSON.stringify(obj),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type:'POST',
                success: function (data) {
                    console.log("HTML Text " + data);

                    $("#updateSuccessModal").modal();

                }
            });
        });
       
    });

    </script>
</section>

