@model UserViewModel
@{
	ViewBag.Title = SiteStrings.Profile_Title;
}
<div class="page-header">
    <h1>@SiteStrings.Profile_Title</h1>
</div>

@if (Model == null)
{
    <p>@SiteStrings.Profile_Not_Available</p>
}
else
{
    @Html.BootstrapValidationSummary(SiteStrings.Shared_Error)
    if (Model.PasswordUpdateSuccessful)
	{
            <div class="alert alert-success alert-temporary">
                @SiteStrings.Profile_Password_Change_Successful
            </div>
	}
	else if (Model.UpdateSuccessful)
	{
        <div class="alert alert-success alert-temporary">
            @SiteStrings.Profile_Details_Updated_Successfully
        </div>
	}
    
    <form role="form" method="post" class="col-md-6">
        @(Html.HiddenFor<UserViewModel, Guid?>(h => h.Id))
        @(Html.HiddenFor<UserViewModel, string>(h => h.ExistingEmail))
        @(Html.HiddenFor<UserViewModel, string>(h => h.ExistingUsername))

        <!-- Firstname -->
        <div class="form-group">
            <label for="NewEmail" class="control-label">@SiteStrings.Shared_Firstname_Label</label>
            <div>
                @(Html.TextBoxFor<UserViewModel, string>(t => t.Firstname, new { @class = "form-control" }))
            </div>
        </div>

        <!-- Lastname -->
        <div class="form-group">
            <label for="Lastname" class="control-label">@SiteStrings.Shared_Lastname_Label</label>
            <div>
                @(Html.TextBoxFor<UserViewModel, string>(t => t.Lastname, new { @class = "form-control" }))
            </div>
        </div>

        <!-- OrgID -->
        <div class="form-group">
            <label for="OrgId" class="control-label">Organisation</label>
            <div>
                @(Html.BootstrapDropDownListFor<UserViewModel, int>(t => t.orgID, Model.OrgsAsSelectList, ""))
            </div>
        </div>

        <!-- Email subscription -->
        <div class="form-group">
            <div class="checkbox">
                <label>@(Html.BootstrapCheckBoxFor<UserViewModel>(t => t.EmailSubscriber, null)) Receive email updates?</label>
            </div>
        </div>

        <!-- Email -->
        <div class="form-group">
            <label for="NewEmail" class="control-label">@SiteStrings.Shared_Email_Label</label>
            <div>
                @(Html.TextBoxFor<UserViewModel, string>(t => t.NewEmail, new { @class = "form-control" }))
            </div>
        </div>

        <!-- New username -->
        <div class="form-group">
            <label for="NewUsername" class="control-label">@SiteStrings.Shared_Username_Label</label>
            <div>
                @(Html.TextBoxFor<UserViewModel, string>(t => t.NewUsername, new { @class = "form-control" }))
            </div>
        </div>

        <!-- Password -->
        <div class="form-group">
            <label for="Password" class="control-label">@SiteStrings.Shared_Password_Label</label>
            <div>
                @(Html.PasswordFor<UserViewModel, string>(t => t.Password, new { @class = "form-control" }))
                <span class="help-block">@SiteStrings.Profile_Leave_Password_Blank</span>
            </div>
        </div>

        <!-- Confirm password -->
        <div class="form-group">
            <label for="PasswordConfirmation" class="control-label">@SiteStrings.Shared_PasswordConfirm_Label</label>
            <div>
                @(Html.PasswordFor<UserViewModel, string>(t => t.PasswordConfirmation, new { @class = "form-control" }))
            </div>
        </div>

        <div class="form-group">
            <div>
                <button type="submit" class="btn btn-primary btn-lg">@SiteStrings.Button_Save</button>
            </div>
        </div>
    </form>
}